# This is a basic workflow that is manually triggered
name: iOS Klaatu Tests
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Experiment Branch'
        default: 'control'
        required: true
        type: string
      slug:
        description: 'Experiment Slug'
        default: 'an-awesome-experiment'
        required: true
        type: string
      user-facing-name:
        description: 'The user facing name'
        default: "An Awesome Experiment"
        required: false
        type: string
jobs:
  iOS-klaatu-tests:
    runs-on: macos-14-xlarge
    name: iOS Klaatu Tests
    steps:
      - name: Clone firefox-ios repo
        uses: actions/checkout@v4
        with:
            repository: jrbenny35/firefox-ios
            ref: "github-actions-update"
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build and setup app
        run: |
          sh ./bootstrap.sh  
          cd firefox-ios
          brew update
          pip3 install virtualenv pipenv
      - name: Install Nimbus CLI
        run: curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/mozilla/application-services/main/install-nimbus-cli.sh | bash  
      - name: Delete Xcode App
        run: sudo rm -rf /Applications/Xcode.app
      - name: Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode_15.3.app && xcodebuild -version
      - name: Echo iOS devices
        run: xcrun simctl list devices
      - name: Run Tests
        run: |
          cd firefox-ios/firefox-ios-tests/Tests/ExperimentIntegrationTests
          pipenv install
          export SIMULATOR_UDID=$(python get_specific_device_udid.py)
          echo "RUNNING TESTS"
          EXPERIMENT_NAME="${{ inputs.user-facing-name }}" pipenv run pytest --experiment ${{ inputs.slug }} -k test_generic.py
      - name: Archive Results
        if: ${{ always() }}
        run: zip -r results.zip /Users/runner/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-results
          path: results.zip
          
